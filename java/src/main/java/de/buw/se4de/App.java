/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.buw.se4de;

// Importing Stuff
import java.io.IOException;
import java.io.Reader;
import java.io.BufferedWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Scanner;

// CVS Manipulation
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVPrinter;
import org.apache.commons.csv.CSVRecord;

// JavaFX
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.Button;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javafx.scene.control.TextField;
import javafx.scene.paint.Color;

// ---------------------------------------------------------------------------------------

public class App extends Application {
	
// ---------------------------------------------------------------------------------------
	// Constants:
	private static final String accountCsvFile = "src/main/resources/accounts.csv";
	private static final String foodItemCsvFile = "src/main/resources/food_item.csv";
	private static final int screenSizeX = 1000;
	private static final int screenSizeY = 800;

	// -----------------------------------------------------------------------------------

	@Override
    public void start(Stage stage) {
		// Create Panes
		Pane mainMenuPane = new VBox();
		Pane accountPane = new VBox();
		Pane homePane = new VBox();
		Pane recipiesPane = new VBox();
		
		
		// Create Scenes
		Scene mainMenuScene = new Scene(mainMenuPane, screenSizeX, screenSizeY);
        Scene accountScene = new Scene(accountPane, screenSizeX, screenSizeY);
        Scene homeScene = new Scene(homePane, screenSizeX, screenSizeY);
        Scene recipiesScene = new Scene(recipiesPane, screenSizeX, screenSizeY);

        
		// Create scene contents for mainMenuScene
		Button switchSceneMainMenu2AccountBtn = new Button("Switch Scene to Account");
		switchSceneMainMenu2AccountBtn.setOnAction(e->{
			stage.setScene(accountScene);
		});
		
		mainMenuPane.getChildren().addAll(switchSceneMainMenu2AccountBtn) ;
        
		
        // Create scene contents for accountScene
		Button switchSceneAccounts2MainMenuBtn = new Button("Switch Scene to MainMenu");
		switchSceneAccounts2MainMenuBtn.setOnAction(e->{
			stage.setScene(mainMenuScene);
		});
		Button switchSceneAccount2HomeBtn = new Button("Switch Scene to Home");
		switchSceneAccount2HomeBtn.setOnAction(e->{
			stage.setScene(homeScene);
		});
		
		String s = readAccount();
        Label labelTest = new Label("Test: \n" + s);
        
        TextField accountInput = new TextField("");
        accountInput.setOnAction(e->{
        	String inputValue = accountInput.getText();
        	addAccount(inputValue);
        });
        
        accountPane.getChildren().addAll(switchSceneAccounts2MainMenuBtn, switchSceneAccount2HomeBtn,
        		labelTest, accountInput);
        
        
        // Create scene contents for homeScene
        Button switchSceneHome2MainMenuBtn = new Button("Switch Scene to MainMenu");
        switchSceneHome2MainMenuBtn.setOnAction(e->{
			stage.setScene(mainMenuScene);
		});
        
        homePane.getChildren().addAll(switchSceneHome2MainMenuBtn);
		
        
        // Set scene
        stage.setScene(mainMenuScene);
        stage.show();
    }

	// -----------------------------------------------------------------------------------

    public static void main(String[] args) {
        launch();
    }
    
    // -----------------------------------------------------------------------------------
	
 	public static String readAccount() {
 		// Returns all names from the csv file
 		String result = "";
 		try (Reader reader = Files.newBufferedReader(Paths.get(accountCsvFile));
 				@SuppressWarnings("deprecation")
 				CSVParser csvParser = new CSVParser(reader,
 						CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreHeaderCase().withTrim());) {
 			
 			// Reading
 			for (CSVRecord csvRecord : csvParser) {
 				String name = csvRecord.get("name");
 				result += "Hello " + name + "!\n";
 			}
 			
 			csvParser.close();
 			reader.close();
 		} catch (IOException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		}
 		
 		return result;
 	}
 	
 	// -----------------------------------------------------------------------------------

 	public static void addAccount(String account) {
 		// Adds a new account record to the accounts csv
 		try (BufferedWriter writer = Files.newBufferedWriter(Paths.get(accountCsvFile), StandardOpenOption.APPEND);
 				@SuppressWarnings("deprecation")
 				CSVPrinter csvPrinter = new CSVPrinter(writer,
 						CSVFormat.DEFAULT.withFirstRecordAsHeader());) {
 			
 			// Add record after removing leading and trailing spaces
 			String[] accountData = account.split(",");
 			csvPrinter.printRecord(accountData[0].strip(), accountData[1].strip(), accountData[2].strip(), accountData[3].strip(), accountData[4].strip(), accountData[5].strip());
 			
 			csvPrinter.close();
 			writer.close();
 			
 		} catch (IOException e) {
 			e.printStackTrace();
 		}
 	}
}
